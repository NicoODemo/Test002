name: $(majorversion).$(minorversion).$(Rev:r)

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  majorversion: 2
  minorversion: 1

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*tests.unit.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: codesigning@2
  inputs:
    secureFileId: 'codesigning.pfx'
    signCertPassword: '$(CodeSigningPassword)'
    files: '**/WinNet*.dll'
    timeServer: 'http://timestamp.digicert.com'
    hashingAlgorithm: 'SHA256'

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_NicoODemo'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(Build.BuildNumber)'
    title: 'Publish_from_AzD_Pipeline'
    releaseNotesSource: 'inline'
    releaseNotesInline: 'Test'
    assets: '$(Build.SourcesDirectory)/*'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'